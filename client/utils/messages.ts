import { Result } from "../model/result";

export const trusted = `Confi√°vel`;
export const inconclusive = `N√£o √© poss√≠vel definir com precis√£o`;
export const untrusted = `N√£o √© confi√°vel`;

export function printSuccess(data: Result) {
  let message = `O dom√≠nio ${data.domain} possui os seguintes dados ‚§µÔ∏è\n
- *Criado:* ${printData(formatData(data.created))}
- *√öltima vez alterado:* ${printData(formatData(data.changed))}
- *Expira em:* ${printData(formatData(data.expiration))}\n`;
  if (data.created) {
    const created = new Date(data.created);
    const date = new Date();
    const differenceMs = date.getTime() - created.getTime();

    const years = Math.floor(differenceMs / (1000 * 60 * 60 * 24 * 365.25));

    if (years == 0)
      message += `- üö® *Cuidado*, o dom√≠nio enviado foi criado h√° menos de um ano.`;
    else if (years <= 1)
      message += `- üö® *Cuidado*, o dom√≠nio enviado foi criado recentemente e possui somente ${
        years == 1 ? "1 ano" : years + " anos"
      }.`;
    else if (years <= 3)
      message += `- ‚ö†Ô∏è O dom√≠nio enviado possui ${years} anos.`;
    else message += `- ‚úÖ O dom√≠nio enviado possui ${years} anos.`;
  }

  if (data.type == "cpf")
    message += `\n
- *CPF:* ${data.cnpj} ü§î\n
N√£o foi poss√≠vel realizar uma an√°lise mais profunda dos dados, pois o dom√≠nio n√£o est√° registrado com um CNPJ. üò•
‚ö†Ô∏è Tenha cuidado, pois dom√≠nios registrados com um CPF, possuem maior risco de anonimato, devido √† dificuldade de rastrear o respons√°vel por atividades maliciosas.`;
  else if (data.type == "cnpj") {
    message += `
- *Nome:* ${printData(data.name)}
- *CNPJ:* ${printData(data.cnpj)}
- *CNPJ Ativo:* ${data.active_cnpj == true ? "Sim ‚úÖ" : "N√£o üö®"}
- *Telefone:* ${printData(data.tel)}
- *E-mail:* ${printData(data.email)}
- *Endere√ßo:* Rua ${printData(data.address.place)} N¬∞ ${printData(
      data.address.number
    )}
- *CEP:* ${printData(data.address.cep)}
- *Cidade:* ${printData(data.address.city)} - (${printData(data.address.uf)})`;
    if (
      data.address.cep &&
      data.address.city &&
      data.address.uf &&
      data.address.place &&
      data.address.number
    ) {
      let link = `https://www.google.com/maps/search/${data.address.place}+${data.address.number}+${data.address.city}+${data.address.uf}`;

      message += `\n\nüìç Para verificar a localiza√ß√£o desse endere√ßo no mapa, sinta-se √† vontade para utilizar o link abaixo:
${link.replace(/ /g, "+")}`;
    }
  }
  return message;
}

function formatData(date: string | null) {
  if (date != null) {
    const newDate = date.split("-");
    return newDate[2] + "/" + newDate[1] + "/" + newDate[0];
  }
  return `N√£o h√° data definida`;
}

function printData(data: string | null) {
  if (data == null || data == "") return "N√£o informado ‚ö†Ô∏è";
  return data;
}

export function registerMessage(name: String) {
  return `Ol√°, ${name}. üëã
Bem-vindo(a) ao nosso servi√ßo de verifica√ß√£o de links! Estamos aqui para ajudar voc√™ a tomar decis√µes mais assertivas sobre a confiabilidade de links que voc√™ suspeita.
Por favor, tenha em mente as seguintes informa√ß√µes: ‚§µÔ∏è
*1.* Este bot realiza uma consulta na receita federal com os dados do respons√°vel pelo dom√≠nio, mas n√£o pode garantir 100% de precis√£o quanto a confiabilidade de um site.
*2.* A decis√£o final sobre confiar ou n√£o em um link √© sempre sua. Recomendamos cautela, especialmente ao abrir links de remetentes desconhecidos.
*3.* N√£o nos responsabilizamos por quaisquer danos resultantes do uso deste servi√ßo. Use-o como uma ferramenta auxiliar, mas sempre confirme com suas pr√≥prias verifica√ß√µes. 

‚Üí Digite 1 se deseja prosseguir e aproveitar todas as funcionalidades de an√°lise de website. `;
}
export function welcomeMessage() {
  return `Parab√©ns! ü•≥
Agora voc√™ tem acesso a todos os recursos de an√°lise de websites.
Sinta-se √† vontade para compartilhar um dom√≠nio que deseja que seja consultado.
Tenha uma √≥tima experi√™ncia!`;
}
